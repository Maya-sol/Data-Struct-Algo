#include <iostream>
struct Array {
  long long unsigned int a1, a2, a3, a4;
};

Array Multiplication(Array first, Array second) {
  Array temp;
  temp.a1 = (first.a1 * second.a1 + first.a2 * second.a3) % 1000003;
  temp.a2 = (first.a1 * second.a2 + first.a2 * second.a4) % 1000003;
  temp.a3 = (first.a3 * second.a1 + first.a4 * second.a3) % 1000003;
  temp.a4 = (first.a3 * second.a2 + first.a4 * second.a4) % 1000003;
  return temp;
}

Array Power(long long unsigned int num, Array base = {1, 1, 1, 0}) {
  if (num == 1) {
    return base;
  }
  if (num % 2 == 0) {
    return Power(num / 2, Multiplication(base, base));
  }
  return Multiplication(base, Power(num / 2, Multiplication(base, base)));
}

long long unsigned int Fibonacci(long long unsigned int num) {
  if (num == 1 || num == 0) {
    return 0;
  }
  if (num == 2 || num == 3) {
    return 1;
  }
  Array result;
  result = Power(num - 3);
  return (result.a1 + result.a2) % 1000003;
}

int main() {
  long long unsigned int number;
  std::cin >> number;
  number = number % 2000008;
  std::cout << Fibonacci(number);
  return 0;
}
